<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_date_caster_test_8php" kind="file" language="PHP">
    <compoundname>DateCasterTest.php</compoundname>
    <innerclass refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test" prot="public">Symfony::Component::VarDumper::Tests::Caster::DateCasterTest</innerclass>
    <innernamespace refid="namespace_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster">Symfony::Component::VarDumper::Tests::Caster</innernamespace>
    <innernamespace refid="namespace_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster">Symfony::Component::VarDumper::Caster::DateCaster</innernamespace>
    <innernamespace refid="namespace_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_fixtures_1_1_date_time_child">Symfony::Component::VarDumper::Tests::Fixtures::DateTimeChild</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">&lt;?php</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Symfony<sp/>package.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Fabien<sp/>Potencier<sp/>&lt;fabien@symfony.com&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>full<sp/>copyright<sp/>and<sp/>license<sp/>information,<sp/>please<sp/>view<sp/>the<sp/>LICENSE</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>file<sp/>that<sp/>was<sp/>distributed<sp/>with<sp/>this<sp/>source<sp/>code.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster" kindref="compound">Symfony\Component\VarDumper\Tests\Caster</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">use<sp/>PHPUnit\Framework\TestCase;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">use<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster" kindref="compound">Symfony\Component\VarDumper\Caster\Caster</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">use<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster" kindref="compound">Symfony\Component\VarDumper\Caster\DateCaster</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">use<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Symfony\Component\VarDumper\Cloner\Stub</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">use<sp/>Symfony\Component\VarDumper\Test\VarDumperTestTrait;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">use<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_fixtures_1_1_date_time_child" kindref="compound">Symfony\Component\VarDumper\Tests\Fixtures\DateTimeChild</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test" kindref="compound">DateCasterTest</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>TestCase</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>use<sp/>VarDumperTestTrait;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1ad15e059dabac035d48486f5b2bdaf7aa" kindref="member">testDumpDateTime</ref>($time,<sp/>$timezone,<sp/>$xDate,<sp/>$xTimestamp)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;=<sp/>50509)<sp/>&amp;&amp;<sp/>preg_match(</highlight><highlight class="stringliteral">&apos;/[-+]\d{2}:\d{2}/&apos;</highlight><highlight class="normal">,<sp/>$timezone))<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;DateTimeZone<sp/>GMT<sp/>offsets<sp/>are<sp/>supported<sp/>since<sp/>5.5.10.<sp/>See<sp/>https://github.com/facebook/hhvm/issues/5875<sp/>for<sp/>HHVM.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$date<sp/>=<sp/>new<sp/>\DateTime($time,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTimeZone($timezone));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="40"><highlight class="normal">DateTime<sp/>@$xTimestamp<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>date:<sp/>$xDate</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpEquals($xDump,<sp/>$date);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1ab38c4a8e223c9edbf242ab506606dcfa" kindref="member">testCastDateTime</ref>($time,<sp/>$timezone,<sp/>$xDate,<sp/>$xTimestamp,<sp/>$xInfos)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;=<sp/>50509)<sp/>&amp;&amp;<sp/>preg_match(</highlight><highlight class="stringliteral">&apos;/[-+]\d{2}:\d{2}/&apos;</highlight><highlight class="normal">,<sp/>$timezone))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;DateTimeZone<sp/>GMT<sp/>offsets<sp/>are<sp/>supported<sp/>since<sp/>5.5.10.<sp/>See<sp/>https://github.com/facebook/hhvm/issues/5875<sp/>for<sp/>HHVM.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$stub<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$date<sp/>=<sp/>new<sp/>\DateTime($time,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTimeZone($timezone));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$cast<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1a4e4322d94fa2e19a217cddeb05efc390" kindref="member">DateCaster::castDateTime</ref>($date,<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_abstract_cloner_1a96c399eba98408cf306d2707b41daeaa" kindref="member">Caster::castObject</ref>($date,<sp/>\DateTime::class),<sp/>$stub,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="62"><highlight class="normal">array:1<sp/>[</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\x00~\\x00date&quot;</highlight><highlight class="normal"><sp/>=&gt;<sp/>$xDate</highlight></codeline>
<codeline lineno="64"><highlight class="normal">]</highlight></codeline>
<codeline lineno="65"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpEquals($xDump,<sp/>$cast);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">Symfony\Component\VarDumper\Caster\ConstStub</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>+type:<sp/>1</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>+</highlight><highlight class="keyword">class</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;$xDate&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>+value:<sp/></highlight><highlight class="stringliteral">&quot;%A$xInfos%A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>+cut:<sp/>0</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>+handle:<sp/>0</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>+refCount:<sp/>0</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>+position:<sp/>0</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>+attr:<sp/>[]</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$cast[</highlight><highlight class="stringliteral">&quot;\0~\0date&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1adefdee399c6b12c758ad99f8b70fd0b2" kindref="member">provideDateTimes</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.000000&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Europe/Zurich&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.0<sp/>Europe/Zurich<sp/>(+02:00)&apos;</highlight><highlight class="normal">,<sp/>1493503200,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now%ADST<sp/>On&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-12-31<sp/>00:00:00.000000&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Europe/Zurich&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-12-31<sp/>00:00:00.0<sp/>Europe/Zurich<sp/>(+01:00)&apos;</highlight><highlight class="normal">,<sp/>1514674800,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>December<sp/>31,<sp/>2017%Afrom<sp/>now%ADST<sp/>Off&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.000000&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+02:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.0<sp/>+02:00&apos;</highlight><highlight class="normal">,<sp/>1493503200,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.100000&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.100<sp/>+00:00&apos;</highlight><highlight class="normal">,<sp/>1493510400,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.120000&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.120<sp/>+00:00&apos;</highlight><highlight class="normal">,<sp/>1493510400,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123000&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123<sp/>+00:00&apos;</highlight><highlight class="normal">,<sp/>1493510400,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123400&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123400<sp/>+00:00&apos;</highlight><highlight class="normal">,<sp/>1493510400,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123450&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123450<sp/>+00:00&apos;</highlight><highlight class="normal">,<sp/>1493510400,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123456&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-04-30<sp/>00:00:00.123456<sp/>+00:00&apos;</highlight><highlight class="normal">,<sp/>1493510400,<sp/></highlight><highlight class="stringliteral">&apos;Sunday,<sp/>April<sp/>30,<sp/>2017%Afrom<sp/>now&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a2a403e074da418ccc012e428368b40d6" kindref="member">testCastDateTimeWithAdditionalChildProperty</ref>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$stub<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$date<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_fixtures_1_1_date_time_child" kindref="compound">DateTimeChild</ref>(</highlight><highlight class="stringliteral">&apos;2020-02-13<sp/>00:00:00.123456&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTimeZone(</highlight><highlight class="stringliteral">&apos;Europe/Paris&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$objectCast<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_abstract_cloner_1a96c399eba98408cf306d2707b41daeaa" kindref="member">Caster::castObject</ref>($date,<sp/>DateTimeChild::class);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$dateCast<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1a4e4322d94fa2e19a217cddeb05efc390" kindref="member">DateCaster::castDateTime</ref>($date,<sp/>$objectCast,<sp/>$stub,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDate<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;2020-02-13<sp/>00:00:00.123456<sp/>Europe/Paris<sp/>(+01:00)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xInfo<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Thursday,<sp/>February<sp/>13,<sp/>2020%Afrom<sp/>now&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="111"><highlight class="normal">array:2<sp/>[</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\x00Symfony\Component\VarDumper\Tests\Fixtures\DateTimeChild\\x00addedProperty&quot;</highlight><highlight class="normal"><sp/>=&gt;<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\x00~\\x00date&quot;</highlight><highlight class="normal"><sp/>=&gt;<sp/>$xDate</highlight></codeline>
<codeline lineno="114"><highlight class="normal">]</highlight></codeline>
<codeline lineno="115"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpEquals($xDump,<sp/>$dateCast);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">Symfony\Component\VarDumper\Caster\ConstStub</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>+type:<sp/>1</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>+</highlight><highlight class="keyword">class</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;$xDate&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>+value:<sp/></highlight><highlight class="stringliteral">&quot;%A$xInfo%A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>+cut:<sp/>0</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>+handle:<sp/>0</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>+refCount:<sp/>0</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>+position:<sp/>0</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>+attr:<sp/>[]</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$dateCast[</highlight><highlight class="stringliteral">&quot;\0~\0date&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a1eeac26529682ada8a3072270661840b" kindref="member">testDumpInterval</ref>($intervalSpec,<sp/>$ms,<sp/>$invert,<sp/>$expected)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($ms<sp/>&amp;&amp;<sp/>\PHP_VERSION_ID<sp/>&gt;=<sp/>70200<sp/>&amp;&amp;<sp/>version_compare(\PHP_VERSION,<sp/></highlight><highlight class="stringliteral">&apos;7.2.0rc3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&lt;=&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;Skipped<sp/>on<sp/>7.2<sp/>before<sp/>rc4<sp/>because<sp/>of<sp/>php<sp/>bug<sp/>#75354.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$interval<sp/>=<sp/>$this-&gt;createInterval($intervalSpec,<sp/>$ms,<sp/>$invert);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="147"><highlight class="normal">DateInterval<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>interval:<sp/>$expected</highlight></codeline>
<codeline lineno="149"><highlight class="normal">%A}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$interval);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a83a00e0c4c45a00e5beab63ec08f3f0b" kindref="member">testDumpIntervalExcludingVerbosity</ref>($intervalSpec,<sp/>$ms,<sp/>$invert,<sp/>$expected)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($ms<sp/>&amp;&amp;<sp/>\PHP_VERSION_ID<sp/>&gt;=<sp/>70200<sp/>&amp;&amp;<sp/>version_compare(\PHP_VERSION,<sp/></highlight><highlight class="stringliteral">&apos;7.2.0rc3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&lt;=&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;Skipped<sp/>on<sp/>7.2<sp/>before<sp/>rc4<sp/>because<sp/>of<sp/>php<sp/>bug<sp/>#75354.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$interval<sp/>=<sp/>$this-&gt;createInterval($intervalSpec,<sp/>$ms,<sp/>$invert);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="167"><highlight class="normal">DateInterval<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>interval:<sp/>$expected</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpEquals($xDump,<sp/>$interval,<sp/>Caster::EXCLUDE_VERBOSE);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a1b4ebde6a27548df4096670639ef8713" kindref="member">testCastInterval</ref>($intervalSpec,<sp/>$ms,<sp/>$invert,<sp/>$xInterval,<sp/>$xSeconds)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($ms<sp/>&amp;&amp;<sp/>\PHP_VERSION_ID<sp/>&gt;=<sp/>70200<sp/>&amp;&amp;<sp/>version_compare(\PHP_VERSION,<sp/></highlight><highlight class="stringliteral">&apos;7.2.0rc3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&lt;=&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;Skipped<sp/>on<sp/>7.2<sp/>before<sp/>rc4<sp/>because<sp/>of<sp/>php<sp/>bug<sp/>#75354.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$interval<sp/>=<sp/>$this-&gt;createInterval($intervalSpec,<sp/>$ms,<sp/>$invert);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$stub<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$cast<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1aa04d2bdacd2cad97030f08401716936a" kindref="member">DateCaster::castInterval</ref>($interval,<sp/>[</highlight><highlight class="stringliteral">&apos;foo&apos;</highlight><highlight class="normal"><sp/>=&gt;<sp/></highlight><highlight class="stringliteral">&apos;bar&apos;</highlight><highlight class="normal">],<sp/>$stub,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Caster::EXCLUDE_VERBOSE);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="190"><highlight class="normal">array:1<sp/>[</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\x00~\\x00interval&quot;</highlight><highlight class="normal"><sp/>=&gt;<sp/>$xInterval</highlight></codeline>
<codeline lineno="192"><highlight class="normal">]</highlight></codeline>
<codeline lineno="193"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpEquals($xDump,<sp/>$cast);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>===<sp/>$xSeconds)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">Symfony\Component\VarDumper\Caster\ConstStub</ref><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>+type:<sp/>1</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>+</highlight><highlight class="keyword">class</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;$xInterval&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>+value:<sp/></highlight><highlight class="stringliteral">&quot;$xSeconds&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>+cut:<sp/>0</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>+handle:<sp/>0</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>+refCount:<sp/>0</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>+position:<sp/>0</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>+attr:<sp/>[]</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$cast[</highlight><highlight class="stringliteral">&quot;\0~\0interval&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1ab45f072bcaf61a257f774ac9dd8b0a21" kindref="member">provideIntervals</ref>()</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$i<sp/>=<sp/>new<sp/>\DateInterval(</highlight><highlight class="stringliteral">&apos;PT0S&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$ms<sp/>=<sp/>($withMs<sp/>=<sp/>\PHP_VERSION_ID<sp/>&gt;=<sp/>70100<sp/>&amp;&amp;<sp/>isset($i-&gt;f))<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;.0&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT0S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT0S&apos;</highlight><highlight class="normal">,<sp/>0.1,<sp/>0,<sp/>$withMs<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>00:00:00.100&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%is&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT1S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>00:00:01&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="stringliteral">&apos;%is&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT2M&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>00:02:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="stringliteral">&apos;%is&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT3H&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>03:00:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="stringliteral">&apos;%ss&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P4D&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>4d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%ss&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P5M&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>5m&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P6Y&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>6y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P1Y2M3DT4H5M6S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>1y<sp/>2m<sp/>3d<sp/>04:05:06&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT1M60S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>00:02:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT1H60M&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>02:00:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P1DT24H&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>2d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P1M32D&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;+<sp/>1m<sp/>32d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT0S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT0S&apos;</highlight><highlight class="normal">,<sp/>0.1,<sp/>1,<sp/>$withMs<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>00:00:00.100&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%is&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT1S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>00:00:01&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="stringliteral">&apos;%is&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT2M&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>00:02:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="stringliteral">&apos;%is&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT3H&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>03:00:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="stringliteral">&apos;%ss&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P4D&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>4d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%ss&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P5M&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>5m&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P6Y&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>6y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P1Y2M3DT4H5M6S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>1y<sp/>2m<sp/>3d<sp/>04:05:06&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT1M60S&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>00:02:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;PT1H60M&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>02:00:00&apos;</highlight><highlight class="normal">.$ms,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P1DT24H&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>2d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;P1M32D&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&apos;-<sp/>1m<sp/>32d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1aab001e3b36b4c560639d71c11f439dcd" kindref="member">testDumpTimeZone</ref>($timezone,<sp/>$expected)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;=<sp/>50509)<sp/>&amp;&amp;<sp/>!preg_match(</highlight><highlight class="stringliteral">&apos;/\w+\/\w+/&apos;</highlight><highlight class="normal">,<sp/>$timezone))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;DateTimeZone<sp/>GMT<sp/>offsets<sp/>are<sp/>supported<sp/>since<sp/>5.5.10.<sp/>See<sp/>https://github.com/facebook/hhvm/issues/5875<sp/>for<sp/>HHVM.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$timezone<sp/>=<sp/>new<sp/>\DateTimeZone($timezone);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="265"><highlight class="normal">DateTimeZone<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>timezone:<sp/>$expected</highlight></codeline>
<codeline lineno="267"><highlight class="normal">%A}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$timezone);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a36ffd1627700dc8d288cfcaf579ef72a" kindref="member">testDumpTimeZoneExcludingVerbosity</ref>($timezone,<sp/>$expected)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;=<sp/>50509)<sp/>&amp;&amp;<sp/>!preg_match(</highlight><highlight class="stringliteral">&apos;/\w+\/\w+/&apos;</highlight><highlight class="normal">,<sp/>$timezone))<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;DateTimeZone<sp/>GMT<sp/>offsets<sp/>are<sp/>supported<sp/>since<sp/>5.5.10.<sp/>See<sp/>https://github.com/facebook/hhvm/issues/5875<sp/>for<sp/>HHVM.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$timezone<sp/>=<sp/>new<sp/>\DateTimeZone($timezone);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="285"><highlight class="normal">DateTimeZone<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>timezone:<sp/>$expected</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$timezone,<sp/>Caster::EXCLUDE_VERBOSE);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a994befea1d833a8165512909d65a78ef" kindref="member">testCastTimeZone</ref>($timezone,<sp/>$xTimezone,<sp/>$xRegion)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;=<sp/>50509)<sp/>&amp;&amp;<sp/>!preg_match(</highlight><highlight class="stringliteral">&apos;/\w+\/\w+/&apos;</highlight><highlight class="normal">,<sp/>$timezone))<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped(</highlight><highlight class="stringliteral">&apos;DateTimeZone<sp/>GMT<sp/>offsets<sp/>are<sp/>supported<sp/>since<sp/>5.5.10.<sp/>See<sp/>https://github.com/facebook/hhvm/issues/5875<sp/>for<sp/>HHVM.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$timezone<sp/>=<sp/>new<sp/>\DateTimeZone($timezone);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$stub<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$cast<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1ae57bbd660c790dbb318f4b7371ebf263" kindref="member">DateCaster::castTimeZone</ref>($timezone,<sp/>[</highlight><highlight class="stringliteral">&apos;foo&apos;</highlight><highlight class="normal"><sp/>=&gt;<sp/></highlight><highlight class="stringliteral">&apos;bar&apos;</highlight><highlight class="normal">],<sp/>$stub,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Caster::EXCLUDE_VERBOSE);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="308"><highlight class="normal">array:1<sp/>[</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\x00~\\x00timezone&quot;</highlight><highlight class="normal"><sp/>=&gt;<sp/>$xTimezone</highlight></codeline>
<codeline lineno="310"><highlight class="normal">]</highlight></codeline>
<codeline lineno="311"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$cast);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">Symfony\Component\VarDumper\Caster\ConstStub</ref><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>+type:<sp/>1</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>+</highlight><highlight class="keyword">class</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;$xTimezone&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>+value:<sp/></highlight><highlight class="stringliteral">&quot;$xRegion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>+cut:<sp/>0</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>+handle:<sp/>0</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>+refCount:<sp/>0</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>+position:<sp/>0</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>+attr:<sp/>[]</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$cast[</highlight><highlight class="stringliteral">&quot;\0~\0timezone&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1aa86a6e2b4dfd41d1e38e99732090920f" kindref="member">provideTimeZones</ref>()</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xRegion<sp/>=<sp/>\extension_loaded(</highlight><highlight class="stringliteral">&apos;intl&apos;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%s&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>1<sp/>(UTC<sp/>offset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;-12:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-12:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;+14:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+14:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>2<sp/>(timezone<sp/>abbreviation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;GMT&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+01:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+02:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;+00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>3<sp/>(timezone<sp/>identifier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;Africa/Tunis&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Africa/Tunis<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;America/Panama&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;America/Panama<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;Asia/Jerusalem&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Asia/Jerusalem<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;Atlantic/Canary&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Atlantic/Canary<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;Australia/Perth&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Australia/Perth<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;Europe/Zurich&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Europe/Zurich<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;Pacific/Tahiti&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Pacific/Tahiti<sp/>(%s:00)&apos;</highlight><highlight class="normal">,<sp/>$xRegion],</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1ad02e7095e2b1d18a3378b5bb04494a33" kindref="member">testDumpPeriod</ref>($start,<sp/>$interval,<sp/>$end,<sp/>$options,<sp/>$expected)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;<sp/>50620<sp/>||<sp/>(\PHP_VERSION_ID<sp/>&gt;=<sp/>70000<sp/>&amp;&amp;<sp/>\PHP_VERSION_ID<sp/>&lt;<sp/>70005))<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$p<sp/>=<sp/>new<sp/>\DatePeriod(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTime($start),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateInterval($interval),<sp/>\is_int($end)<sp/>?<sp/>$end<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTime($end),<sp/>$options);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="370"><highlight class="normal">DatePeriod<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>period:<sp/>$expected</highlight></codeline>
<codeline lineno="372"><highlight class="normal">%A}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$p);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a36bf2e30004e9909e59387c88262be8d" kindref="member">testCastPeriod</ref>($start,<sp/>$interval,<sp/>$end,<sp/>$options,<sp/>$xPeriod,<sp/>$xDates)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;<sp/>50620<sp/>||<sp/>(\PHP_VERSION_ID<sp/>&gt;=<sp/>70000<sp/>&amp;&amp;<sp/>\PHP_VERSION_ID<sp/>&lt;<sp/>70005))<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;markTestSkipped();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$p<sp/>=<sp/>new<sp/>\DatePeriod(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTime($start),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateInterval($interval),<sp/>\is_int($end)<sp/>?<sp/>$end<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTime($end),<sp/>$options);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$stub<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$cast<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1ad03100e01be075d0eca25581fb936f0f" kindref="member">DateCaster::castPeriod</ref>($p,<sp/>[],<sp/>$stub,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="393"><highlight class="normal">array:1<sp/>[</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\x00~\\x00period&quot;</highlight><highlight class="normal"><sp/>=&gt;<sp/>$xPeriod</highlight></codeline>
<codeline lineno="395"><highlight class="normal">]</highlight></codeline>
<codeline lineno="396"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpEquals($xDump,<sp/>$cast);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$xDump<sp/>=<sp/>&lt;&lt;&lt;EODUMP</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">Symfony\Component\VarDumper\Caster\ConstStub</ref><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>+type:<sp/>1</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>+</highlight><highlight class="keyword">class</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;$xPeriod&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>+value:<sp/></highlight><highlight class="stringliteral">&quot;%A$xDates%A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>+cut:<sp/>0</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>+handle:<sp/>0</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>+refCount:<sp/>0</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>+position:<sp/>0</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>+attr:<sp/>[]</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal">EODUMP;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;assertDumpMatchesFormat($xDump,<sp/>$cast[</highlight><highlight class="stringliteral">&quot;\0~\0period&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_tests_1_1_caster_1_1_date_caster_test_1a33efbeb0c420767b10f28dc701453d25" kindref="member">providePeriods</ref>()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$i<sp/>=<sp/>new<sp/>\DateInterval(</highlight><highlight class="stringliteral">&apos;PT0S&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$ms<sp/>=<sp/>\PHP_VERSION_ID<sp/>&gt;=<sp/>70100<sp/>&amp;&amp;<sp/>isset($i-&gt;f)<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;.0&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$periods<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-03&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>to<sp/>2017-01-03<sp/>00:00:00.0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a2)<sp/>2017-01-02&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>recurring<sp/>2<sp/>time/s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a2)<sp/>2017-01-02&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-04&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>to<sp/>2017-01-04<sp/>00:00:00.0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a2)<sp/>2017-01-02%a3)<sp/>2017-01-03&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/>2,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>recurring<sp/>3<sp/>time/s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a2)<sp/>2017-01-02%a3)<sp/>2017-01-03&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-05&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>to<sp/>2017-01-05<sp/>00:00:00.0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a2)<sp/>2017-01-02%a1<sp/>more&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>recurring<sp/>4<sp/>time/s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a2)<sp/>2017-01-02%a3)<sp/>2017-01-03%a1<sp/>more&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-21&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>to<sp/>2017-01-21<sp/>00:00:00.0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a17<sp/>more&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/>19,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>recurring<sp/>20<sp/>time/s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01%a17<sp/>more&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01<sp/>01:00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-03<sp/>01:00:00&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>01:00:00.0<sp/>(included)<sp/>to<sp/>2017-01-03<sp/>01:00:00.0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01<sp/>01:00:00.0%a2)<sp/>2017-01-02<sp/>01:00:00.0&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01<sp/>01:00:00&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>01:00:00.0<sp/>(included)<sp/>recurring<sp/>2<sp/>time/s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01<sp/>01:00:00.0%a2)<sp/>2017-01-02<sp/>01:00:00.0&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1DT1H&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-03&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;every<sp/>+<sp/>1d<sp/>01:00:00$ms,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>to<sp/>2017-01-03<sp/>00:00:00.0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01<sp/>00:00:00.0%a2)<sp/>2017-01-02<sp/>01:00:00.0&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1DT1H&apos;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;every<sp/>+<sp/>1d<sp/>01:00:00$ms,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(included)<sp/>recurring<sp/>2<sp/>time/s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-01<sp/>00:00:00.0%a2)<sp/>2017-01-02<sp/>01:00:00.0&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;2017-01-04&apos;</highlight><highlight class="normal">,<sp/>\DatePeriod::EXCLUDE_START_DATE,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(excluded)<sp/>to<sp/>2017-01-04<sp/>00:00:00.0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-02%a2)<sp/>2017-01-03&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;2017-01-01&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P1D&apos;</highlight><highlight class="normal">,<sp/>2,<sp/>\DatePeriod::EXCLUDE_START_DATE,<sp/></highlight><highlight class="stringliteral">&apos;every<sp/>+<sp/>1d,<sp/>from<sp/>2017-01-01<sp/>00:00:00.0<sp/>(excluded)<sp/>recurring<sp/>2<sp/>time/s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;1)<sp/>2017-01-02%a2)<sp/>2017-01-03&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\PHP_VERSION_ID<sp/>&lt;<sp/>70107)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_walk($periods,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>(&amp;$i)<sp/>{<sp/>$i[5]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;<sp/>});</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$periods;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createInterval($intervalSpec,<sp/>$ms,<sp/>$invert)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$interval<sp/>=<sp/>new<sp/>\DateInterval($intervalSpec);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\PHP_VERSION_ID<sp/>&gt;=<sp/>70100<sp/>&amp;&amp;<sp/>isset($interval-&gt;f))<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$interval-&gt;f<sp/>=<sp/>$ms;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$interval-&gt;invert<sp/>=<sp/>$invert;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$interval;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/wamp64/www/citations_encours/src/vendor/symfony/var-dumper/Tests/Caster/DateCasterTest.php"/>
  </compounddef>
</doxygen>
