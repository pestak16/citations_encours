<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_date_caster_8php" kind="file" language="PHP">
    <compoundname>DateCaster.php</compoundname>
    <innerclass refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster" prot="public">Symfony::Component::VarDumper::Caster::DateCaster</innerclass>
    <innernamespace refid="namespace_symfony_1_1_component_1_1_var_dumper_1_1_caster">Symfony::Component::VarDumper::Caster</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">&lt;?php</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Symfony<sp/>package.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Fabien<sp/>Potencier<sp/>&lt;fabien@symfony.com&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>full<sp/>copyright<sp/>and<sp/>license<sp/>information,<sp/>please<sp/>view<sp/>the<sp/>LICENSE</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>file<sp/>that<sp/>was<sp/>distributed<sp/>with<sp/>this<sp/>source<sp/>code.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_symfony_1_1_component_1_1_var_dumper_1_1_caster" kindref="compound">Symfony\Component\VarDumper\Caster</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">use<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Symfony\Component\VarDumper\Cloner\Stub</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster" kindref="compound">DateCaster</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1a4e4322d94fa2e19a217cddeb05efc390" kindref="member">castDateTime</ref>(\DateTimeInterface<sp/>$d,<sp/>array<sp/>$a,<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref><sp/>$stub,<sp/>$isNested,<sp/>$filter)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$prefix<sp/>=<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1a234d00196816918f54ad83a612574b53" kindref="member">Caster::PREFIX_VIRTUAL</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$location<sp/>=<sp/>$d-&gt;getTimezone()-&gt;getLocation();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$fromNow<sp/>=<sp/>(new<sp/>\DateTime())-&gt;diff($d);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$title<sp/>=<sp/>$d-&gt;format(</highlight><highlight class="stringliteral">&apos;l,<sp/>F<sp/>j,<sp/>Y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.self::formatInterval($fromNow).</highlight><highlight class="stringliteral">&apos;<sp/>from<sp/>now&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.($location<sp/>?<sp/>($d-&gt;format(</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;\nDST<sp/>On&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;\nDST<sp/>Off&quot;</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unset(</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$a[<ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1aaab0636212652299287443cb9fca0256" kindref="member">Caster::PREFIX_DYNAMIC</ref>.</highlight><highlight class="stringliteral">&apos;date&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$a[<ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1aaab0636212652299287443cb9fca0256" kindref="member">Caster::PREFIX_DYNAMIC</ref>.</highlight><highlight class="stringliteral">&apos;timezone&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$a[<ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1aaab0636212652299287443cb9fca0256" kindref="member">Caster::PREFIX_DYNAMIC</ref>.</highlight><highlight class="stringliteral">&apos;timezone_type&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$a[$prefix.</highlight><highlight class="stringliteral">&apos;date&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">ConstStub</ref>(self::formatDateTime($d,<sp/>$location<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;<sp/>e<sp/>(P)&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;<sp/>P&apos;</highlight><highlight class="normal">),<sp/>$title);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$stub-&gt;class<sp/>.=<sp/>$d-&gt;format(</highlight><highlight class="stringliteral">&apos;<sp/>@U&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$a;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1aa04d2bdacd2cad97030f08401716936a" kindref="member">castInterval</ref>(\DateInterval<sp/>$interval,<sp/>array<sp/>$a,<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref><sp/>$stub,<sp/>$isNested,<sp/>$filter)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$now<sp/>=<sp/>new<sp/>\DateTimeImmutable();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$numberOfSeconds<sp/>=<sp/>$now-&gt;add($interval)-&gt;getTimestamp()<sp/>-<sp/>$now-&gt;getTimestamp();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$title<sp/>=<sp/>number_format($numberOfSeconds,<sp/>0,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">).</highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$i<sp/>=<sp/>[<ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1a234d00196816918f54ad83a612574b53" kindref="member">Caster::PREFIX_VIRTUAL</ref>.</highlight><highlight class="stringliteral">&apos;interval&apos;</highlight><highlight class="normal"><sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">ConstStub</ref>(self::formatInterval($interval),<sp/>$title)];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$filter<sp/>&amp;<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1aad33c911ea989e3d2bdea48a6b1cfaf5" kindref="member">Caster::EXCLUDE_VERBOSE</ref><sp/>?<sp/>$i<sp/>:<sp/>$i<sp/>+<sp/>$a;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>formatInterval(\DateInterval<sp/>$i)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$format<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;%R<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>===<sp/>$i-&gt;y<sp/>&amp;&amp;<sp/>0<sp/>===<sp/>$i-&gt;m<sp/>&amp;&amp;<sp/>($i-&gt;h<sp/>&gt;=<sp/>24<sp/>||<sp/>$i-&gt;i<sp/>&gt;=<sp/>60<sp/>||<sp/>$i-&gt;s<sp/>&gt;=<sp/>60))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$i<sp/>=<sp/>date_diff($d<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>\DateTime(),<sp/>date_add(clone<sp/>$d,<sp/>$i));<sp/></highlight><highlight class="comment">//<sp/>recalculate<sp/>carry<sp/>over<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$format<sp/>.=<sp/>0<sp/>&lt;<sp/>$i-&gt;days<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%ad<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$format<sp/>.=<sp/>($i-&gt;y<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%yy<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).($i-&gt;m<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%mm<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).($i-&gt;d<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%dd<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\PHP_VERSION_ID<sp/>&gt;=<sp/>70100<sp/>&amp;&amp;<sp/>isset($i-&gt;f))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$format<sp/>.=<sp/>$i-&gt;h<sp/>||<sp/>$i-&gt;i<sp/>||<sp/>$i-&gt;s<sp/>||<sp/>$i-&gt;f<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%H:%I:&apos;</highlight><highlight class="normal">.self::formatSeconds($i-&gt;s,<sp/>substr($i-&gt;f,<sp/>2))<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$format<sp/>.=<sp/>$i-&gt;h<sp/>||<sp/>$i-&gt;i<sp/>||<sp/>$i-&gt;s<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;%H:%I:%S&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$format<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;%R<sp/>&apos;</highlight><highlight class="normal"><sp/>===<sp/>$format<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;0s&apos;</highlight><highlight class="normal"><sp/>:<sp/>$format;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$i-&gt;format(rtrim($format));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1ae57bbd660c790dbb318f4b7371ebf263" kindref="member">castTimeZone</ref>(\DateTimeZone<sp/>$timeZone,<sp/>array<sp/>$a,<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref><sp/>$stub,<sp/>$isNested,<sp/>$filter)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$location<sp/>=<sp/>$timeZone-&gt;getLocation();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$formatted<sp/>=<sp/>(new<sp/>\DateTime(</highlight><highlight class="stringliteral">&apos;now&apos;</highlight><highlight class="normal">,<sp/>$timeZone))-&gt;format($location<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;e<sp/>(P)&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$title<sp/>=<sp/>$location<sp/>&amp;&amp;<sp/>\extension_loaded(</highlight><highlight class="stringliteral">&apos;intl&apos;</highlight><highlight class="normal">)<sp/>?<sp/>\Locale::getDisplayRegion(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">.$location[</highlight><highlight class="stringliteral">&apos;country_code&apos;</highlight><highlight class="normal">],<sp/>\Locale::getDefault())<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$z<sp/>=<sp/>[<ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1a234d00196816918f54ad83a612574b53" kindref="member">Caster::PREFIX_VIRTUAL</ref>.</highlight><highlight class="stringliteral">&apos;timezone&apos;</highlight><highlight class="normal"><sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">ConstStub</ref>($formatted,<sp/>$title)];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$filter<sp/>&amp;<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1aad33c911ea989e3d2bdea48a6b1cfaf5" kindref="member">Caster::EXCLUDE_VERBOSE</ref><sp/>?<sp/>$z<sp/>:<sp/>$z<sp/>+<sp/>$a;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_date_caster_1ad03100e01be075d0eca25581fb936f0f" kindref="member">castPeriod</ref>(\DatePeriod<sp/>$p,<sp/>array<sp/>$a,<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_cloner_1_1_stub" kindref="compound">Stub</ref><sp/>$stub,<sp/>$isNested,<sp/>$filter)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\defined(</highlight><highlight class="stringliteral">&apos;HHVM_VERSION_ID&apos;</highlight><highlight class="normal">)<sp/>||<sp/>\PHP_VERSION_ID<sp/>&lt;<sp/>50620<sp/>||<sp/>(\PHP_VERSION_ID<sp/>&gt;=<sp/>70000<sp/>&amp;&amp;<sp/>\PHP_VERSION_ID<sp/>&lt;<sp/>70005))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>see<sp/>https://bugs.php.net/71635</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$a;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$dates<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(\PHP_VERSION_ID<sp/>&gt;=<sp/>70107)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>see<sp/>https://bugs.php.net/74639</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(clone<sp/>$p<sp/>as<sp/>$i<sp/>=&gt;<sp/>$d)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3<sp/>===<sp/>$i)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$now<sp/>=<sp/>new<sp/>\DateTimeImmutable();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$dates[]<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;%s<sp/>more&apos;</highlight><highlight class="normal">,<sp/>($end<sp/>=<sp/>$p-&gt;getEndDate())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ceil(($end-&gt;format(</highlight><highlight class="stringliteral">&apos;U.u&apos;</highlight><highlight class="normal">)<sp/>-<sp/>$d-&gt;format(</highlight><highlight class="stringliteral">&apos;U.u&apos;</highlight><highlight class="normal">))<sp/>/<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>$now-&gt;add($p-&gt;getDateInterval())-&gt;format(</highlight><highlight class="stringliteral">&apos;U.u&apos;</highlight><highlight class="normal">)<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>$now-&gt;format(</highlight><highlight class="stringliteral">&apos;U.u&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>$p-&gt;recurrences<sp/>-<sp/>$i</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$dates[]<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;%s)<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>$i<sp/>+<sp/>1,<sp/>self::formatDateTime($d));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$period<sp/>=<sp/>sprintf(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;every<sp/>%s,<sp/>from<sp/>%s<sp/>(%s)<sp/>%s&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self::formatInterval($p-&gt;getDateInterval()),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self::formatDateTime($p-&gt;getStartDate()),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$p-&gt;include_start_date<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;included&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;excluded&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>($end<sp/>=<sp/>$p-&gt;getEndDate())<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;to<sp/>&apos;</highlight><highlight class="normal">.self::formatDateTime($end)<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;recurring<sp/>&apos;</highlight><highlight class="normal">.$p-&gt;recurrences.</highlight><highlight class="stringliteral">&apos;<sp/>time/s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$p<sp/>=<sp/>[<ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1a234d00196816918f54ad83a612574b53" kindref="member">Caster::PREFIX_VIRTUAL</ref>.</highlight><highlight class="stringliteral">&apos;period&apos;</highlight><highlight class="normal"><sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_const_stub" kindref="compound">ConstStub</ref>($period,<sp/>implode(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>$dates))];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$filter<sp/>&amp;<sp/><ref refid="class_symfony_1_1_component_1_1_var_dumper_1_1_caster_1_1_caster_1aad33c911ea989e3d2bdea48a6b1cfaf5" kindref="member">Caster::EXCLUDE_VERBOSE</ref><sp/>?<sp/>$p<sp/>:<sp/>$p<sp/>+<sp/>$a;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>formatDateTime(\DateTimeInterface<sp/>$d,<sp/>$extra<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$d-&gt;format(</highlight><highlight class="stringliteral">&apos;Y-m-d<sp/>H:i:&apos;</highlight><highlight class="normal">.self::formatSeconds($d-&gt;format(</highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">),<sp/>$d-&gt;format(</highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">)).$extra);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>formatSeconds($s,<sp/>$us)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(</highlight><highlight class="stringliteral">&apos;%02d.%s&apos;</highlight><highlight class="normal">,<sp/>$s,<sp/>0<sp/>===<sp/>($len<sp/>=<sp/>\strlen($t<sp/>=<sp/>rtrim($us,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)))<sp/>?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>($len<sp/>&lt;=<sp/>3<sp/>?<sp/>str_pad($t,<sp/>3,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>:<sp/>$us));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/wamp64/www/citations_encours/src/vendor/symfony/var-dumper/Caster/DateCaster.php"/>
  </compounddef>
</doxygen>
